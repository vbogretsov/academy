<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="answer.text" xml:space="preserve">
    <value>Answer text</value>
  </data>
  <data name="answer.text.err.required" xml:space="preserve">
    <value>Answer text is required</value>
  </data>
  <data name="article.description" xml:space="preserve">
    <value>Article description</value>
  </data>
  <data name="article.description.err.required" xml:space="preserve">
    <value>Article description is required</value>
  </data>
  <data name="article.disciplines.err.required" xml:space="preserve">
    <value>Article should have at least one discipline</value>
  </data>
  <data name="article.search.author" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="article.search.description" xml:space="preserve">
    <value>Article description</value>
  </data>
  <data name="article.search.title" xml:space="preserve">
    <value>Article title</value>
  </data>
  <data name="article.source" xml:space="preserve">
    <value>Article pdf file name</value>
  </data>
  <data name="article.source.err.required" xml:space="preserve">
    <value>Source file name is required</value>
  </data>
  <data name="article.title" xml:space="preserve">
    <value>Artcile title</value>
  </data>
  <data name="article.title.err.required" xml:space="preserve">
    <value>Article title is required</value>
  </data>
  <data name="author.email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="author.email.err.invalid" xml:space="preserve">
    <value>Specified email is not an email address</value>
  </data>
  <data name="author.email.err.required" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="author.firstname" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="author.firstname.err.required" xml:space="preserve">
    <value>First name is required</value>
  </data>
  <data name="author.lastname" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="author.lastname.err.required" xml:space="preserve">
    <value>Last name is required</value>
  </data>
  <data name="banner" xml:space="preserve">
    <value>3eng.swf</value>
  </data>
  <data name="comment.text" xml:space="preserve">
    <value>Comment text</value>
  </data>
  <data name="comment.text.err.required" xml:space="preserve">
    <value>Comment text is required</value>
  </data>
  <data name="copyright" xml:space="preserve">
    <value>© 2013 Academy</value>
  </data>
  <data name="external.menu.about" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="external.menu.articles" xml:space="preserve">
    <value>Articles</value>
  </data>
  <data name="external.menu.contacts" xml:space="preserve">
    <value>Contacts</value>
  </data>
  <data name="external.menu.questions" xml:space="preserve">
    <value>Questions</value>
  </data>
  <data name="external.title" xml:space="preserve">
    <value>ACADEMY</value>
  </data>
  <data name="internal.menu.articles" xml:space="preserve">
    <value>Articles</value>
  </data>
  <data name="internal.menu.exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="internal.menu.profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="internal.menu.questions" xml:space="preserve">
    <value>Questions</value>
  </data>
  <data name="internal.title" xml:space="preserve">
    <value>ACADEMY</value>
  </data>
  <data name="lang.eng" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="lang.language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="lang.rus" xml:space="preserve">
    <value>Russian</value>
  </data>
  <data name="login.btn.login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="login.email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="login.er.email.invalid" xml:space="preserve">
    <value>The specified address is not a valid email address</value>
  </data>
  <data name="login.er.email.required" xml:space="preserve">
    <value>Specify email address to login</value>
  </data>
  <data name="login.er.pwd.required" xml:space="preserve">
    <value>Specify password to login</value>
  </data>
  <data name="login.err.failed" xml:space="preserve">
    <value>The user name or password provided is incorrect.</value>
  </data>
  <data name="login.forgotpwd" xml:space="preserve">
    <value>Forgot the password?</value>
  </data>
  <data name="login.lbl.signin" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="login.pwd" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="login.remember" xml:space="preserve">
    <value>Stay online</value>
  </data>
  <data name="login.submit" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="logo" xml:space="preserve">
    <value>logo_eng.png</value>
  </data>
  <data name="note.text" xml:space="preserve">
    <value>Note text</value>
  </data>
  <data name="note.text.err.required" xml:space="preserve">
    <value>Note text is required</value>
  </data>
  <data name="note.title" xml:space="preserve">
    <value>Note title</value>
  </data>
  <data name="note.title.err.required" xml:space="preserve">
    <value>Note title is required</value>
  </data>
  <data name="prifile.myquestions" xml:space="preserve">
    <value>My questions</value>
  </data>
  <data name="profile.edit.email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="profile.edit.er.email.invalid" xml:space="preserve">
    <value>The specified address is not a valid email address</value>
  </data>
  <data name="profile.edit.er.email.required" xml:space="preserve">
    <value>Email address is required</value>
  </data>
  <data name="profile.edit.er.fname.required" xml:space="preserve">
    <value>Fist name is required</value>
  </data>
  <data name="profile.edit.er.lname" xml:space="preserve">
    <value>Last name is required</value>
  </data>
  <data name="profile.edit.fname" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="profile.edit.lname" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="profile.edit.save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="profile.myanswers" xml:space="preserve">
    <value>My answers</value>
  </data>
  <data name="profile.myarticles" xml:space="preserve">
    <value>My articles</value>
  </data>
  <data name="profile.mycomment" xml:space="preserve">
    <value>My comment</value>
  </data>
  <data name="question.disciplines.err.required" xml:space="preserve">
    <value>At least one discipline should be selected</value>
  </data>
  <data name="question.search.keyword" xml:space="preserve">
    <value>Search keywords</value>
  </data>
  <data name="question.text" xml:space="preserve">
    <value>Question text</value>
  </data>
  <data name="question.text.err.required" xml:space="preserve">
    <value>Question text is required</value>
  </data>
  <data name="question.title" xml:space="preserve">
    <value>Question title</value>
  </data>
  <data name="question.title.err.required" xml:space="preserve">
    <value>Question title is required</value>
  </data>
  <data name="registration..btn.register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="registration.bidthdate" xml:space="preserve">
    <value>Birth date</value>
  </data>
  <data name="registration.email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="registration.er.email.exists" xml:space="preserve">
    <value>User with specified email already exists</value>
  </data>
  <data name="registration.er.email.invalid" xml:space="preserve">
    <value>The specified address is not a valid email address</value>
  </data>
  <data name="registration.er.email.required" xml:space="preserve">
    <value>Email address is required</value>
  </data>
  <data name="registration.er.fname.required" xml:space="preserve">
    <value>First name is required</value>
  </data>
  <data name="registration.er.lname.required" xml:space="preserve">
    <value>Last name is required</value>
  </data>
  <data name="registration.er.pwd.length" xml:space="preserve">
    <value>Password must have least 6 symbols</value>
  </data>
  <data name="registration.er.pwd.required" xml:space="preserve">
    <value>Pssword is required</value>
  </data>
  <data name="registration.er.pwdconf.notmatch" xml:space="preserve">
    <value>Password confirmation does not match the password</value>
  </data>
  <data name="registration.er.pwdconf.required" xml:space="preserve">
    <value>Password confirmation is required</value>
  </data>
  <data name="registration.er.university.required" xml:space="preserve">
    <value>University is required</value>
  </data>
  <data name="registration.fname" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="registration.lbl.register" xml:space="preserve">
    <value>Register if you do not have an account</value>
  </data>
  <data name="registration.lname" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="registration.pwd" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="registration.pwdconf" xml:space="preserve">
    <value>Password confirmation</value>
  </data>
  <data name="registration.submit" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="registration.univercity" xml:space="preserve">
    <value>Univercity</value>
  </data>
  <data name="user.birthdate" xml:space="preserve">
    <value>Birth date</value>
  </data>
  <data name="user.birthdate.err.required" xml:space="preserve">
    <value>Birth date is required</value>
  </data>
  <data name="user.email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="user.email.err.invalid" xml:space="preserve">
    <value>Specified email is not an email address</value>
  </data>
  <data name="user.email.err.required" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="user.firstname" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="user.firstname.err.requiered" xml:space="preserve">
    <value>First name is required</value>
  </data>
  <data name="user.lastname" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="user.lastname.err.required" xml:space="preserve">
    <value>Last name is required</value>
  </data>
  <data name="user.photo" xml:space="preserve">
    <value>Photo</value>
  </data>
  <data name="user.university" xml:space="preserve">
    <value>University</value>
  </data>
  <data name="user.university.err.required" xml:space="preserve">
    <value>University is required</value>
  </data>
</root>